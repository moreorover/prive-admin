name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          #          platforms: linux/amd64,linux/arm64
          build-args: |
            NEXT_PUBLIC_APP_URL=https://${{ vars.DOMAIN_NAME }}
            BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-development:
    name: Deploy
    environment:
      name: production
      url: https://prive.salon
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    timeout-minutes: 30
    env:
      VERSION: ${{ github.sha }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:dev-ci

      - name: Test Hostname Resolution
        run: |
          ping -c 3 prive || (echo "Hostname resolution failed!" && exit 1)
          nc -zv prive 22 || (echo "Port 22 is not accessible!" && exit 1)

      - name: Prepare SSH Directory
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          ssh-keyscan -p "22" -H "prive" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -o ConnectTimeout=30 "cicd@prive" "echo 'SSH connection successful!'"

      - name: Configure Docker Stack
        run: |
          docker context create remote --docker "host=ssh://cicd@prive"
          docker context ls
          docker context use remote

      - name: Docker Stack Deploy
        run: docker stack deploy -c docker-stack.yaml sensepro

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Reload database
        env:
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@prive:5432/${{ secrets.POSTGRES_DATABASE }}
        run: npm run db:dev
